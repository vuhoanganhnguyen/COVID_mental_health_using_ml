setwd("E:\\Study\\TRU\\Third Year\\Winter 2022\\COMP 3710 Applied Artificial Intelligence\\Project\\Data\\Baysian Network for Feature Selection")
coviddata = read.table("Dataset_after_Bayesian.csv", sep= ",",
header=TRUE, stringsAsFactors = TRUE)
t <- data.frame(matrix(as.numeric(unlist(coviddata)),ncol = length(coviddata[1,])))
rownames(t) <- rownames(coviddata)
colnames(t) <- colnames(coviddata)
coviddata <- t
head(coviddata, n = 5)
dag.hiton = si.hiton.pc(coviddata, test = "cor", undirected = FALSE)
graphviz.plot(dag.hiton)
library("readr")
library("tidyverse")
library("bnlearn")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.14")
setwd("E:\\Study\\TRU\\Third Year\\Winter 2022\\COMP 3710 Applied Artificial Intelligence\\Project\\Data\\Baysian Network for Feature Selection")
coviddata = read.table("Dataset_after_Bayesian.csv", sep= ",",
header=TRUE, stringsAsFactors = TRUE)
t <- data.frame(matrix(as.numeric(unlist(coviddata)),ncol = length(coviddata[1,])))
rownames(t) <- rownames(coviddata)
colnames(t) <- colnames(coviddata)
coviddata <- t
head(coviddata, n = 5)
dag.hiton = si.hiton.pc(coviddata, test = "cor", undirected = FALSE)
graphviz.plot(dag.hiton)
library("readr")
library("tidyverse")
setwd("E:\\Study\\TRU\\Third Year\\Winter 2022\\COMP 3710 Applied Artificial Intelligence\\Project\\Data\\Baysian Network for Feature Selection")
data <- read.table("Dataset_after_Bayesian.csv", sep= ",",
header=TRUE, stringsAsFactors = TRUE)
summary(data)
# this loads the data
# Install & load dplyr package
library("dplyr")
library("bnlearn")
# this loads the bnlearn package
library("qgraph")
# this loads the qgraph package
t <- data.frame(matrix(as.numeric(unlist(data)),ncol = length(data[1,])))
rownames(t) <- rownames(data)
colnames(t) <- colnames(data)
data <- t
BNpc <- hc(data)
# this performs the algorithm
qgraph(BNpc)
# this plots the network
BST <- boot.strength(data,
# this includes data
R = 200,
# number of boots
algorithm = "hc")
bst1 <- BST[BST$strength > 0.85 & BST$direction > 0.5, ]
# this sets the minimum direction
avgnet1 <- averaged.network(BST, threshold = 0.85)
# compute the average network
qgraph(avgnet1, layout="circle")
# this plots the network with qgraph
library("readr")
library("tidyverse")
setwd("E:\\Study\\TRU\\Third Year\\Winter 2022\\COMP 3710 Applied Artificial Intelligence\\Project\\Data\\Baysian Network for Feature Selection")
data <- read.table("Dataset_after_Bayesian.csv", sep= ",",
header=TRUE, stringsAsFactors = TRUE)
summary(data)
# this loads the data
# Install & load dplyr package
library("dplyr")
library("bnlearn")
# this loads the bnlearn package
library("qgraph")
# this loads the qgraph package
t <- data.frame(matrix(as.numeric(unlist(data)),ncol = length(data[1,])))
rownames(t) <- rownames(data)
colnames(t) <- colnames(data)
data <- t
BNpc <- hc(data)
# this performs the algorithm
qgraph(BNpc)
# this plots the network
BST <- boot.strength(data,
# this includes data
R = 200,
# number of boots
algorithm = "hc")
bst1 <- BST[BST$strength > 0.85 & BST$direction > 0.5, ]
# this sets the minimum direction
avgnet1 <- averaged.network(BST, threshold = 0.85)
# compute the average network
qgraph(avgnet1, layout="circle")
# this plots the network with qgraph
setwd("E:\\Study\\TRU\\Third Year\\Winter 2022\\COMP 3710 Applied Artificial Intelligence\\Project\\Data\\Baysian Network for Feature Selection")
data <- read.table("Dataset_after_Bayesian_MXM.csv", sep= ",",
header=TRUE, stringsAsFactors = TRUE)
summary(data)
# this loads the data
# Install & load dplyr package
library("dplyr")
library("bnlearn")
# this loads the bnlearn package
library("qgraph")
# this loads the qgraph package
t <- data.frame(matrix(as.numeric(unlist(data)),ncol = length(data[1,])))
rownames(t) <- rownames(data)
colnames(t) <- colnames(data)
data <- t
BNpc <- hc(data)
# this performs the algorithm
qgraph(BNpc)
# this plots the network
BST <- boot.strength(data,
# this includes data
R = 200,
# number of boots
algorithm = "hc")
bst1 <- BST[BST$strength > 0.85 & BST$direction > 0.5, ]
# this sets the minimum direction
avgnet1 <- averaged.network(BST, threshold = 0.85)
# compute the average network
qgraph(avgnet1, layout="circle")
# this plots the network with qgraph
setwd("E:\\Study\\TRU\\Third Year\\Winter 2022\\COMP 3710 Applied Artificial Intelligence\\Project\\Data\\Baysian Network for Feature Selection")
data <- read.table("Dataset_after_Chi_square.csv", sep= ",",
header=TRUE, stringsAsFactors = TRUE)
t <- data.frame(matrix(as.numeric(unlist(data)),ncol = length(data[1,])))
rownames(t) <- rownames(data)
colnames(t) <- colnames(data)
data <- t
str(data)
targetVariable <- data$MH_05
targetVariable <- NULL
covid_dataset <- as.matrix(data[, -1])
covid_dataset[, 10] <- as.numeric(covid_dataset[, 10])
head(covid_dataset, 2)
dim(covid_dataset)
target_Mental <- as.vector(data$MH_05)
str(target_Mental,2)
mmpcobject_data_Mental <- MXM::MMPC( target  = target_Mental,
dataset = covid_dataset,
max_k = 3,
threshold = 0.05,
test = 'testIndFisher',
ini = NULL,
hash =  TRUE,
hashObject = NULL,
ncores = 1,
backward = TRUE)
summary(mmpcobject_data_Mental)
mmpcobject_data_Mental@selectedVarsOrder
colnames(covid_dataset)[25]
setwd("E:\\Study\\TRU\\Third Year\\Winter 2022\\COMP 3710 Applied Artificial Intelligence\\Project\\Data\\Baysian Network for Feature Selection")
data <- read.table("Dataset_after_Chi_square.csv", sep= ",",
header=TRUE, stringsAsFactors = TRUE)
t <- data.frame(matrix(as.numeric(unlist(data)),ncol = length(data[1,])))
rownames(t) <- rownames(data)
colnames(t) <- colnames(data)
data <- t
str(data)
targetVariable <- data$MH_05
targetVariable <- NULL
covid_dataset <- as.matrix(data[, -1])
covid_dataset[, 10] <- as.numeric(covid_dataset[, 10])
head(covid_dataset, 2)
dim(covid_dataset)
target_Mental <- as.vector(data$MH_05)
str(target_Mental,2)
mmpcobject_data_Mental <- MXM::MMPC( target  = target_Mental,
dataset = covid_dataset,
max_k = 3,
threshold = 0.05,
test = 'testIndFisher',
ini = NULL,
hash =  TRUE,
hashObject = NULL,
ncores = 1,
backward = TRUE)
summary(mmpcobject_data_Mental)
mmpcobject_data_Mental@selectedVarsOrder
colnames(covid_dataset)[25]
colnames(covid_dataset)[14]
colnames(covid_dataset)[9]
